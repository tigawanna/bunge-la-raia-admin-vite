/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as WardsIndexImport } from './routes/wards/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as MpsIndexImport } from './routes/mps/index'
import { Route as McasIndexImport } from './routes/mcas/index'
import { Route as GovernorsIndexImport } from './routes/governors/index'
import { Route as CountiesIndexImport } from './routes/counties/index'
import { Route as ConstituenciesIndexImport } from './routes/constituencies/index'
import { Route as CandidatesIndexImport } from './routes/candidates/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AuthSignupImport } from './routes/auth/signup'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WardsIndexRoute = WardsIndexImport.update({
  path: '/wards/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const MpsIndexRoute = MpsIndexImport.update({
  path: '/mps/',
  getParentRoute: () => rootRoute,
} as any)

const McasIndexRoute = McasIndexImport.update({
  path: '/mcas/',
  getParentRoute: () => rootRoute,
} as any)

const GovernorsIndexRoute = GovernorsIndexImport.update({
  path: '/governors/',
  getParentRoute: () => rootRoute,
} as any)

const CountiesIndexRoute = CountiesIndexImport.update({
  path: '/counties/',
  getParentRoute: () => rootRoute,
} as any)

const ConstituenciesIndexRoute = ConstituenciesIndexImport.update({
  path: '/constituencies/',
  getParentRoute: () => rootRoute,
} as any)

const CandidatesIndexRoute = CandidatesIndexImport.update({
  path: '/candidates/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/candidates/': {
      id: '/candidates/'
      path: '/candidates'
      fullPath: '/candidates'
      preLoaderRoute: typeof CandidatesIndexImport
      parentRoute: typeof rootRoute
    }
    '/constituencies/': {
      id: '/constituencies/'
      path: '/constituencies'
      fullPath: '/constituencies'
      preLoaderRoute: typeof ConstituenciesIndexImport
      parentRoute: typeof rootRoute
    }
    '/counties/': {
      id: '/counties/'
      path: '/counties'
      fullPath: '/counties'
      preLoaderRoute: typeof CountiesIndexImport
      parentRoute: typeof rootRoute
    }
    '/governors/': {
      id: '/governors/'
      path: '/governors'
      fullPath: '/governors'
      preLoaderRoute: typeof GovernorsIndexImport
      parentRoute: typeof rootRoute
    }
    '/mcas/': {
      id: '/mcas/'
      path: '/mcas'
      fullPath: '/mcas'
      preLoaderRoute: typeof McasIndexImport
      parentRoute: typeof rootRoute
    }
    '/mps/': {
      id: '/mps/'
      path: '/mps'
      fullPath: '/mps'
      preLoaderRoute: typeof MpsIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/wards/': {
      id: '/wards/'
      path: '/wards'
      fullPath: '/wards'
      preLoaderRoute: typeof WardsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthSignupRoute,
  AdminIndexRoute,
  AuthIndexRoute,
  CandidatesIndexRoute,
  ConstituenciesIndexRoute,
  CountiesIndexRoute,
  GovernorsIndexRoute,
  McasIndexRoute,
  MpsIndexRoute,
  ProfileIndexRoute,
  WardsIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/auth/signup",
        "/admin/",
        "/auth/",
        "/candidates/",
        "/constituencies/",
        "/counties/",
        "/governors/",
        "/mcas/",
        "/mps/",
        "/profile/",
        "/wards/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/candidates/": {
      "filePath": "candidates/index.tsx"
    },
    "/constituencies/": {
      "filePath": "constituencies/index.tsx"
    },
    "/counties/": {
      "filePath": "counties/index.tsx"
    },
    "/governors/": {
      "filePath": "governors/index.tsx"
    },
    "/mcas/": {
      "filePath": "mcas/index.tsx"
    },
    "/mps/": {
      "filePath": "mps/index.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.tsx"
    },
    "/wards/": {
      "filePath": "wards/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
